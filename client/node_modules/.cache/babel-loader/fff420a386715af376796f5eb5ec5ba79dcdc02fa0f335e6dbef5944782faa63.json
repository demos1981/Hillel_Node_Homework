{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  isLoggedIn: false,\n  message: \"\",\n  loading: false\n};\nexport const login = createAsyncThunk(\"auth/login\", async ({\n  email,\n  password\n}) => {\n  const response = await axios.post(\"http://localhost:3001/api/auth/login\", {\n    email,\n    password\n  });\n  return response.data;\n});\nconst authSlice = createSlice({\n  name: \"auth\",\n  // `createSlice` выведет тип состояния из аргумента `initialState`\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(login.pending, state => {\n      state.loading = true;\n      state.message = \"\";\n    }).addCase(login.fulfilled, (state, action) => {\n      state.loading = false;\n      state.isLoggedIn = true;\n      state.message = action.payload.message;\n    }).addCase(login.rejected, (state, action) => {\n      state.loading = false;\n      state.isLoggedIn = false;\n      state.message = \"Login failed. Invalid credentials or user not found.\";\n    });\n  }\n});\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","isLoggedIn","message","loading","login","email","password","response","post","data","authSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["C:/Git Repository/Hillel_Node_Homework/client/src/store/slices/authSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { AuthState } from \"../../types/data\";\r\nimport axios from \"axios\";\r\n\r\nconst initialState: AuthState = {\r\n  isLoggedIn: false,\r\n  message: \"\",\r\n  loading: false,\r\n};\r\n\r\nexport const login = createAsyncThunk(\r\n  \"auth/login\",\r\n  async ({ email, password }: { email: string; password: string }) => {\r\n    const response = await axios.post(\"http://localhost:3001/api/auth/login\", {\r\n      email,\r\n      password,\r\n    });\r\n    return response.data;\r\n  }\r\n);\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  // `createSlice` выведет тип состояния из аргумента `initialState`\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(login.pending, (state) => {\r\n        state.loading = true;\r\n        state.message = \"\";\r\n      })\r\n      .addCase(login.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.isLoggedIn = true;\r\n        state.message = action.payload.message;\r\n      })\r\n      .addCase(login.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.isLoggedIn = false;\r\n        state.message = \"Login failed. Invalid credentials or user not found.\";\r\n      });\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAuB,GAAG;EAC9BC,UAAU,EAAE,KAAK;EACjBC,OAAO,EAAE,EAAE;EACXC,OAAO,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,KAAK,GAAGN,gBAAgB,CACnC,YAAY,EACZ,OAAO;EAAEO,KAAK;EAAEC;AAA8C,CAAC,KAAK;EAClE,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,sCAAsC,EAAE;IACxEH,KAAK;IACLC;EACF,CAAC,CAAC;EACF,OAAOC,QAAQ,CAACE,IAAI;AACtB,CACF,CAAC;AAED,MAAMC,SAAS,GAAGb,WAAW,CAAC;EAC5Bc,IAAI,EAAE,MAAM;EACZ;EACAX,YAAY;EACZY,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACX,KAAK,CAACY,OAAO,EAAGC,KAAK,IAAK;MACjCA,KAAK,CAACd,OAAO,GAAG,IAAI;MACpBc,KAAK,CAACf,OAAO,GAAG,EAAE;IACpB,CAAC,CAAC,CACDa,OAAO,CAACX,KAAK,CAACc,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC3CF,KAAK,CAACd,OAAO,GAAG,KAAK;MACrBc,KAAK,CAAChB,UAAU,GAAG,IAAI;MACvBgB,KAAK,CAACf,OAAO,GAAGiB,MAAM,CAACC,OAAO,CAAClB,OAAO;IACxC,CAAC,CAAC,CACDa,OAAO,CAACX,KAAK,CAACiB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC1CF,KAAK,CAACd,OAAO,GAAG,KAAK;MACrBc,KAAK,CAAChB,UAAU,GAAG,KAAK;MACxBgB,KAAK,CAACf,OAAO,GAAG,sDAAsD;IACxE,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeQ,SAAS,CAACY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}