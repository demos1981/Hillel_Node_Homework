{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  products: [],\n  loading: false,\n  error: null\n};\n\n// Async thunks for API calls\nexport const fetchProducts = createAsyncThunk(\"products/fetchProducts\", async (_, {\n  getState\n}) => {\n  const state = getState();\n  const response = await axios.get(\"http://localhost:3001/api/products\", {\n    headers: {\n      Authorization: state.auth.token\n    }\n  });\n  return response.data;\n});\nexport const addProduct = createAsyncThunk(\"products/addProduct\", async (product, {\n  getState\n}) => {\n  const response = await axios.post(\"http://localhost:3001/api/products\", product);\n  return response.data;\n});\nexport const updateProduct = createAsyncThunk(\"products/updateProduct\", async ({\n  id,\n  product\n}) => {\n  const response = await axios.put(`http://localhost:3001/api/products/${id}`, product);\n  return response.data;\n});\nexport const deleteProduct = createAsyncThunk(\"products/deleteProduct\", async id => {\n  await axios.delete(`http://localhost:3001/api/products/${id}`);\n  return id;\n});\nconst productSlice = createSlice({\n  name: \"products\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchProducts.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchProducts.fulfilled, (state, action) => {\n      state.loading = false;\n      state.products = action.payload;\n    }).addCase(fetchProducts.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message || \"Failed to fetch products\";\n    }).addCase(addProduct.fulfilled, (state, action) => {\n      state.products.push(action.payload);\n    }).addCase(updateProduct.fulfilled, (state, action) => {\n      const index = state.products.findIndex(product => product.id === action.payload.id);\n      if (index !== -1) {\n        state.products[index] = action.payload;\n      }\n    }).addCase(deleteProduct.fulfilled, (state, action) => {\n      state.products = state.products.filter(product => product.id !== action.payload);\n    });\n  }\n});\nexport default productSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","products","loading","error","fetchProducts","_","getState","state","response","get","headers","Authorization","auth","token","data","addProduct","product","post","updateProduct","id","put","deleteProduct","delete","productSlice","name","reducers","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","message","push","index","findIndex","filter","reducer"],"sources":["C:/Git Repository/Hillel_Node_Homework/client/src/store/slices/productSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\ninterface Product {\r\n  id: number;\r\n  name: string;\r\n  price: number;\r\n  description: string;\r\n}\r\n\r\ninterface ProductState {\r\n  products: Product[];\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: ProductState = {\r\n  products: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\n// Async thunks for API calls\r\nexport const fetchProducts = createAsyncThunk(\r\n  \"products/fetchProducts\",\r\n  async (_, { getState }) => {\r\n    const state = getState() as { auth: { token: string } };\r\n    const response = await axios.get(\"http://localhost:3001/api/products\", {\r\n      headers: { Authorization: state.auth.token },\r\n    });\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const addProduct = createAsyncThunk(\r\n  \"products/addProduct\",\r\n  async (product: Omit<Product, \"id\">, { getState }) => {\r\n    const response = await axios.post(\r\n      \"http://localhost:3001/api/products\",\r\n      product\r\n    );\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const updateProduct = createAsyncThunk(\r\n  \"products/updateProduct\",\r\n  async ({ id, product }: { id: number; product: Omit<Product, \"id\"> }) => {\r\n    const response = await axios.put(\r\n      `http://localhost:3001/api/products/${id}`,\r\n      product\r\n    );\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const deleteProduct = createAsyncThunk(\r\n  \"products/deleteProduct\",\r\n  async (id: number) => {\r\n    await axios.delete(`http://localhost:3001/api/products/${id}`);\r\n    return id;\r\n  }\r\n);\r\n\r\nconst productSlice = createSlice({\r\n  name: \"products\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchProducts.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchProducts.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.products = action.payload;\r\n      })\r\n      .addCase(fetchProducts.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message || \"Failed to fetch products\";\r\n      })\r\n      .addCase(addProduct.fulfilled, (state, action) => {\r\n        state.products.push(action.payload);\r\n      })\r\n      .addCase(updateProduct.fulfilled, (state, action) => {\r\n        const index = state.products.findIndex(\r\n          (product) => product.id === action.payload.id\r\n        );\r\n        if (index !== -1) {\r\n          state.products[index] = action.payload;\r\n        }\r\n      })\r\n      .addCase(deleteProduct.fulfilled, (state, action) => {\r\n        state.products = state.products.filter(\r\n          (product) => product.id !== action.payload\r\n        );\r\n      });\r\n  },\r\n});\r\n\r\nexport default productSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}