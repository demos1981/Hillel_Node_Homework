{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  token: null,\n  role: null,\n  loading: false,\n  message: null\n};\nexport const login = createAsyncThunk(\"auth/login\", async ({\n  email,\n  password\n}) => {\n  const response = await axios.post(\"http://localhost:3001/api/auth/login\", {\n    email,\n    password\n  });\n  return response.data;\n});\nconst authSlice = createSlice({\n  name: \"auth\",\n  // `createSlice` выведет тип состояния из аргумента `initialState`\n  initialState,\n  reducers: {\n    logout: state => {\n      state.token = null;\n      state.role = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(login.pending, state => {\n      state.loading = true;\n      state.message = null;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.loading = false;\n      state.token = action.payload.token;\n      state.role = action.payload.role;\n    }).addCase(login.rejected, (state, action) => {\n      state.loading = false;\n      state.message = \"Login failed. Invalid credentials or user not found.\";\n    });\n  }\n});\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","token","role","loading","message","login","email","password","response","post","data","authSlice","name","reducers","logout","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","reducer"],"sources":["C:/Git Repository/Hillel_Node_Homework/client/src/store/slices/authSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { AuthState } from \"../../types/data\";\r\nimport axios from \"axios\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst initialState: AuthState = {\r\n  token: null,\r\n  role: null,\r\n  loading: false,\r\n  message: null,\r\n};\r\n\r\nexport const login = createAsyncThunk(\r\n  \"auth/login\",\r\n  async ({ email, password }: { email: string; password: string }) => {\r\n    const response = await axios.post(\"http://localhost:3001/api/auth/login\", {\r\n      email,\r\n      password,\r\n    });\r\n    return response.data;\r\n  }\r\n);\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  // `createSlice` выведет тип состояния из аргумента `initialState`\r\n  initialState,\r\n  reducers: {\r\n    logout: (state) => {\r\n      state.token = null;\r\n      state.role = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(login.pending, (state) => {\r\n        state.loading = true;\r\n        state.message = null;\r\n      })\r\n      .addCase(login.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.token = action.payload.token;\r\n        state.role = action.payload.role;\r\n      })\r\n      .addCase(login.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.message = \"Login failed. Invalid credentials or user not found.\";\r\n      });\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,OAAOC,KAAK,MAAM,OAAO;AAGzB,MAAMC,YAAuB,GAAG;EAC9BC,KAAK,EAAE,IAAI;EACXC,IAAI,EAAE,IAAI;EACVC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,KAAK,GAAGP,gBAAgB,CACnC,YAAY,EACZ,OAAO;EAAEQ,KAAK;EAAEC;AAA8C,CAAC,KAAK;EAClE,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,sCAAsC,EAAE;IACxEH,KAAK;IACLC;EACF,CAAC,CAAC;EACF,OAAOC,QAAQ,CAACE,IAAI;AACtB,CACF,CAAC;AAED,MAAMC,SAAS,GAAGd,WAAW,CAAC;EAC5Be,IAAI,EAAE,MAAM;EACZ;EACAZ,YAAY;EACZa,QAAQ,EAAE;IACRC,MAAM,EAAGC,KAAK,IAAK;MACjBA,KAAK,CAACd,KAAK,GAAG,IAAI;MAClBc,KAAK,CAACb,IAAI,GAAG,IAAI;IACnB;EACF,CAAC;EACDc,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACb,KAAK,CAACc,OAAO,EAAGJ,KAAK,IAAK;MACjCA,KAAK,CAACZ,OAAO,GAAG,IAAI;MACpBY,KAAK,CAACX,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC,CACDc,OAAO,CAACb,KAAK,CAACe,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MAC3CN,KAAK,CAACZ,OAAO,GAAG,KAAK;MACrBY,KAAK,CAACd,KAAK,GAAGoB,MAAM,CAACC,OAAO,CAACrB,KAAK;MAClCc,KAAK,CAACb,IAAI,GAAGmB,MAAM,CAACC,OAAO,CAACpB,IAAI;IAClC,CAAC,CAAC,CACDgB,OAAO,CAACb,KAAK,CAACkB,QAAQ,EAAE,CAACR,KAAK,EAAEM,MAAM,KAAK;MAC1CN,KAAK,CAACZ,OAAO,GAAG,KAAK;MACrBY,KAAK,CAACX,OAAO,GAAG,sDAAsD;IACxE,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeO,SAAS,CAACa,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}